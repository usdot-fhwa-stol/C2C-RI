
/*
 * InfoLayerPanel.java - Contains the InfoLayerPanel class which extends javax.swing.JPanel.
 *
 * Created on Feb 12, 2010, 7:44:02 PM
 */
package org.fhwa.c2cri.gui;

import javax.swing.JTable;

/**
 * The panel used by the user to specify Information Level parameters to be used for a test.
 * 
 * This class provides the view of the panel only.  Control of the panel is handled by an external
 * coordinator (control) class.
 *
 * @author TransCore ITS, LLC
 * Last Updated:  1/8/2014
 */
public class AppLayerTestCasePanel extends javax.swing.JPanel {

    /** 
     * Creates new form InfoLayerPanel by calling initComponents.
     */
    public AppLayerTestCasePanel() {
        initComponents();
    }

    public JTable getTestCasesTable() {
        return testCasesTable;
    }

    
    /** This method is called from within the constructor to
     * initialize the panel.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        testCasesPanel = new javax.swing.JPanel();
        selectNeedsScrollPane = new javax.swing.JScrollPane();
        testCasesTable = new javax.swing.JTable();

        testCasesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Test Case Source Selections"));

        selectNeedsScrollPane.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        selectNeedsScrollPane.setAutoscrolls(true);
        selectNeedsScrollPane.setPreferredSize(new java.awt.Dimension(650, 72));

        testCasesTable.setAutoCreateRowSorter(true);
        testCasesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"2.3.1.1.1", "Need for Subscription Request"},
                {"2.3.1.1.2", "Need to communicate DMS Inventory"},
                {"2.3.1.1.3", "Need to provide CCTV Control"},
                {"2.3.1.1.4", "Need to process FE Update"},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Test Case", "Source"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        testCasesTable.setToolTipText("The list of Application Layer Test Cases.");
        testCasesTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        testCasesTable.setFillsViewportHeight(true);
        testCasesTable.setOpaque(false);
        testCasesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        selectNeedsScrollPane.setViewportView(testCasesTable);
        testCasesTable.getColumnModel().getColumn(0).setPreferredWidth(10);
        testCasesTable.getAccessibleContext().setAccessibleName("Application Layer Test Cases");
        testCasesTable.getAccessibleContext().setAccessibleDescription("Contains the list of test cases defined by the selected Application Layer Test Suite.");

        javax.swing.GroupLayout testCasesPanelLayout = new javax.swing.GroupLayout(testCasesPanel);
        testCasesPanel.setLayout(testCasesPanelLayout);
        testCasesPanelLayout.setHorizontalGroup(
            testCasesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testCasesPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectNeedsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                .addContainerGap())
        );
        testCasesPanelLayout.setVerticalGroup(
            testCasesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(testCasesPanelLayout.createSequentialGroup()
                .addComponent(selectNeedsScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 340, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(testCasesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(testCasesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane selectNeedsScrollPane;
    private javax.swing.JPanel testCasesPanel;
    protected javax.swing.JTable testCasesTable;
    // End of variables declaration//GEN-END:variables
}
