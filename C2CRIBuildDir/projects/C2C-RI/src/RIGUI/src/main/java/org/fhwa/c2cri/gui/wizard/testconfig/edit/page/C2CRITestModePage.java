/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.fhwa.c2cri.gui.wizard.testconfig.edit.page;

import com.github.cjwizard.WizardPage;
import com.github.cjwizard.WizardSettings;
import java.util.List;
import org.fhwa.c2cri.domain.testmodel.TestConfigurationController;
import org.fhwa.c2cri.gui.ConfigurationPanel;
import org.fhwa.c2cri.gui.wizard.C2CRIWizardPage;
import org.fhwa.c2cri.testmodel.TestSuites;

/**
 *
 * @author TransCore ITS, LLC
 */
public class C2CRITestModePage extends C2CRIWizardPage {

    ConfigurationPanel configPanel;
    TestConfigurationController controller;

    /**
     * Creates new form C2CRITestModePage
     */
    public C2CRITestModePage(String title, String description, TestConfigurationController controller) {
        super(title, description);
        this.controller = controller;
        configPanel = new ConfigurationPanel();
        add(configPanel);
        initConfigPanel();
//        initComponents();
    }

    /**
     * Sets the Test Config Parameters on the Config Panel.
     */
    private void initConfigPanel() {
        configPanel.setConfigNameTextField(controller.getFileName());
        configPanel.setConfigDescriptionTextArea(controller.getTestDescription());
        configPanel.setInfoLayerTestSuiteTextField(controller.getSelectedInfoLayerTestSuite());
        configPanel.setAppLayerTestSuiteTextField(controller.getSelectedAppLayerTestSuite());
        configPanel.setAppLayerTextField(TestSuites.getInstance().getAppLayerStandard(controller.getSelectedAppLayerTestSuite()));
        configPanel.setInfoLayerTextField(TestSuites.getInstance().getInfoLayerStandard(controller.getSelectedInfoLayerTestSuite()));
        configPanel.setInfoLayerTestSuiteDescriptionTextArea(TestSuites.getInstance().getDescription(controller.getSelectedInfoLayerTestSuite()));
        configPanel.setAppLayerTestSuiteDescriptionTextArea(TestSuites.getInstance().getDescription(controller.getSelectedAppLayerTestSuite()));

        configPanel.setInfoLayerTestSuitePredefined(TestSuites.getInstance().isPredefined(controller.getSelectedInfoLayerTestSuite()));
        configPanel.setAppLayerTestSuitePredefined(TestSuites.getInstance().isPredefined(controller.getSelectedAppLayerTestSuite()));

        configPanel.setOwnerModeRadioButton(controller.getTestMode().isOwnerCenterOperation());
        configPanel.setExternalModeRadioButton(controller.getTestMode().isExternalCenterOperation());

        configPanel.setChecksumTextArea(controller.getCheckSumValue());

        configPanel.setConfigDescriptionTextArea(controller.getTestDescription());

    }

    @Override
    public void updateSettings(WizardSettings settings) {
        super.updateSettings(settings);

        controller.getTestMode().setExternalCenterOperation(configPanel.getExternalModeRadioButton());
        controller.getTestMode().setOwnerCenterOperation(configPanel.getOwnerModeRadioButton());

        controller.setTestDescription(configPanel.getConfigDescriptionTextArea());

    }

    @Override
    public boolean isCheckRequiredBeforeCancel() {
        return true;
    }

    
    
    /**
     * We will enable the "Next >" button just before the page is displayed:
     */
    public void rendering(List<WizardPage> path, WizardSettings settings) {
        super.rendering(path, settings);
        setNextEnabled(true);
        setPrevEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
